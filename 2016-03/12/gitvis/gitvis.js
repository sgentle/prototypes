// Generated by CoffeeScript 1.10.0
(function() {
  var Git, addDetails, fs, giffHistory;

  console.log('hello');

  Git = require('nodegit');

  fs = require('fs');

  addDetails = function(summary, details) {
    var el, summaryEl;
    el = document.createElement('details');
    el.style.marginLeft = "2em";
    summaryEl = document.createElement('summary');
    el.appendChild(summaryEl);
    summaryEl.innerHTML = summary;
    el.innerHTML += details;
    return el;
  };

  giffHistory = function(startCommit) {
    var currentEl, history;
    history = startCommit.history();
    currentEl = document.body;
    history.on('commit', function(commit) {
      var newDetails;
      newDetails = addDetails(commit.message(), "<dl>\n<dt>Commit<dd>" + (commit.sha()) + "\n<dt>Author<dd>" + (commit.author().name()) + " <" + (commit.author().email()) + ">\n<dt>Date<dd>" + (commit.date()) + "\n<dt>Message<dd>" + (commit.message()) + "\n</dl>");
      currentEl.appendChild(newDetails);
      return currentEl = newDetails;
    });
    return history.start();
  };

  Git.Repository.open('testrepo').then(function(repo) {
    return repo.getReferences(Git.Reference.TYPE.OID);
  }).then(function(refs) {
    console.log("refs", refs);
    return Promise.all(refs.filter(function(ref) {
      return ref.isBranch && ref.target();
    }).map(function(ref) {
      return Git.Commit.lookup(ref.repo, ref.target());
    }));
  }).then(function(commits) {
    return commits.map(giffHistory);
  })["catch"](function(err) {
    return console.error(err);
  });

}).call(this);
