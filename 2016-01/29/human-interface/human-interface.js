// Generated by CoffeeScript 1.10.0
(function() {
  var $, $elements, $instruction, active, ary, shuffle, writeAry;

  $ = document.querySelector.bind(document);

  $instruction = $('#instrunction');

  $elements = $('#elements');

  ary = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];

  shuffle = function(xs) {
    var i, m, ref, results;
    m = xs.length;
    results = [];
    while (m) {
      i = Math.floor(Math.random() * m--);
      results.push((ref = [xs[m], xs[i]], xs[i] = ref[0], xs[m] = ref[1], ref));
    }
    return results;
  };

  ary = ary.map(function() {
    return Math.floor(Math.random() * 10);
  });

  $elements.addEventListener('dragstart', function(ev) {
    console.log('dragstart', ev);
    return ev.dataTransfer.setData("text/plain", ev.target.getAttribute('data-index'));
  });

  $elements.addEventListener('dragover', function(ev) {
    ev.dataTransfer.dropEffect = 'move';
    return ev.preventDefault();
  });

  active = null;

  $elements.addEventListener('drop', function(ev) {
    var from, ref, to;
    console.log('drop', ev);
    from = Number(ev.dataTransfer.getData('text'));
    to = Number(ev.target.getAttribute('data-index'));
    if (!(from && to)) {
      return;
    }
    console.log('from', from, 'to', ev.target.getAttribute('data-index'));
    console.log("ary", ary);
    ref = [ary[to], ary[from]], ary[from] = ref[0], ary[to] = ref[1];
    console.log("ary", ary);
    if (active === from || active === to) {
      active = null;
    }
    return writeAry(ary);
  });

  $elements.addEventListener('click', function(ev) {
    console.log('clickety');
    active = Number(ev.target.getAttribute('data-index'));
    return writeAry(ary);
  });

  writeAry = function(ary) {
    return $elements.innerHTML = ary.map(function(x, i) {
      return "<div class='element " + (i === active ? 'active' : '') + "' data-index='" + i + "' draggable='true'>" + x + "</div>";
    }).join('');
  };

  writeAry(ary);

}).call(this);
